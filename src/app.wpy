<style lang="less">
@import (less) "static/css/font.wxss";
page {
  height: 100%;
  box-sizing: border-box;
}


</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'
import 'wepy-async-function'; 

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index/index',
      'pages/publish/publish',
      'pages/person/person',
      'pages/address/list/list',
      'pages/address/edit/edit',
      'pages/school/school',
      'pages/taskinfo/taskinfo',
      'pages/minepublish/minepublish'
    
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '校园快递',
      navigationBarTextStyle: 'black',
      backgroundTextStyle:"dark"
    },
    tabBar:{
      color: "#7A7E83",
      selectedColor: "#7A7E83",
      borderStyle: "white",
      backgroundColor: "#ffffff",
      list: [
        {
          pagePath: "pages/index/index",
          iconPath: "static/img/icon/订单.png",
          selectedIconPath:"static/img/icon/订单.png",
          text: "任务单"
          },
         {
          pagePath: "pages/publish/publish",
          iconPath: "static/img/icon/添加.png",
          selectedIconPath:"static/img/icon/添加.png",
          text: "发布任务"
        },
        {
          pagePath: "pages/person/person",
          iconPath: "static/img/icon/我.png",
          selectedIconPath:"static/img/icon/我.png",
          text: "我"
        }
       ]
    }
  }
  

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify');
  }

  onLaunch() {
  
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
  
  }
}
</script>
